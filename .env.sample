# Main configuration
monitor_ver=1
# Copy this to .env file in same directory as evernode_monitor.js
# modules required xrpl-client xrpl-accountlib nodemailer dotenv

# Xahaud Server settings
xahaud="wss://xahau.network"
xahaud_test="wss://xahau-test.net"
use_testnet="true"
fee=24 # in drops so 12 drops would be 0.000012 XAH
auto_adjust_fee="true"
fee_adjust_amount=500

# choose which modules to run, if no arguments used when running `node evernode_monitor.js`
run_wallet_setup="false"
run_funds_transfer="true"
run_monitor_balance="false"
run_monitor_heartbeat="false"

# key_pair.txt file used in wallet_setup module,  1st keypair is used for; xahSourceAccount, evrDestinationAccount and secret, 2nd keypair in file is used for reputation account.
# layout per line is "Address: rzErPRJ178T5ZKN7AjVYLphYo7HP84spT      Seed: sEdVLsDtbUT44ZaovrmHvxnTCtzP8FG"
keypair_file="/root/key_pair.txt"
use_keypair_file="true"

# The final destination account for the EVR rewards. (can be one of the evernode host account)
evrDestinationAccount="rEvrDestinationAddressMain"
evrDestinationAccountTag="" # only if needed    

# The source account for XAH/EVR used for sending funds in wallet_setup, and monitor_balance modules (can be one of the evernode host account.)
xahSourceAccount="rXahSourceAddress"

# Put each evernode node r address on a new line. You can use one evernode address as source or destination
accounts=""

# Put each evernode node r address on a new line. You can use one evernode address as source or destination
reputationAccounts=""

# Secret for regular key that can sign for node r wallets
secret=""



# SECTION FOR: wallet_setup MODULE, the EVR, and XAH amounts to be used, 0 amounts will skip sending(and setting trustline for EVR)
xahSetupamount=100
evrSetupamount=500
set_regular_key="true"

# SECTION FOR: funds_transfer MODULE, the minimum amount of EVR to trigger a transfer to the evrDestinationAccount. and when xah_transfer is enabled, it will leave minimum of 4XAH in account
minimum_evr_transfer=20
xah_transfer="false"

# SECTION FOR: monitor_balance MODULE, the balance threshold that triggers a refill transaction (EVR is only for the reputation accounts), and the amount it will deposit when triggered
xah_balance_threshold=3
evr_balance_threshold=3
xah_refill_amount=3
evr_refill_amount=3

#  SECTION FOR: monitor_heartbeat MODULE,
# Minutes from last heartbeat that triggers the alert mail. Heartbeat transactions are sent every hour, so 120 minutes seems reasonable. 
# You can test the email configuration by setting a low value (e.g. 30), so the alert email is sent even if the heartbeat is regular.
minutes_from_last_heartbeat_alert_threshold=120
# Interval in minutes between alerts for the same down event (0 to send the alert mail just when the down occurs). 
# For example, if it's set to one day (60 * 24 = 1440 minutes) and the system is down, only one alert email every day is sent.  
alert_repeat_interval_in_minutes=1440

#  EMAIL SECTION 
# account settings (set a free account on https://www.brevo.com/, it gives you 300 mails per day)
# follow these instruction to setup your account in BREVO: https://www.programonaut.com/how-to-send-an-email-in-node-js-using-an-smtp-step-by-step/
email_notification="false"
smtpKey="<your smtp key>"
smtpEmail="<your account email in Brevo>"
# if the value of this destinationEmail (below) is empty or missing, the smtpEmail value (above) will be used as a destination email instead
destinationEmail=""

# UPTIME ROBOT/KUMA SECTION
push_notification="true"
push_url=""
push_user=""
push_pass=""
push_addresses=""



#used for external programs
cronjob_main_hours=24
cronjob_heartbeat_mins=30

# true if you want full log
verboseLog="false"